<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Containerization on ScopeCam MCP Documentation</title><link>https://example.github.io/mcp-scope/tags/containerization/</link><description>Recent content in Containerization on ScopeCam MCP Documentation</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://example.github.io/mcp-scope/tags/containerization/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugo Containerized Setup for MCP Documentation</title><link>https://example.github.io/mcp-scope/hugo-containerized-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.github.io/mcp-scope/hugo-containerized-setup/</guid><description>Hugo Containerized Setup for MCP Documentation üü¢ Active
‚Ü©Ô∏è Back to Hugo Migration Executive Summary
Overview This document outlines how to integrate the Hugo static site documentation system with the existing ScopeCam MCP containerized development environment. It provides configuration details for developing, testing, and building the documentation site in a containerized environment consistent with the project&amp;rsquo;s established patterns.
Prerequisites Familiarity with the Containerized Development Environment Docker or Podman installed locally Basic understanding of the Hugo static site generator Access to the project repository Container Configuration Dockerfile for Hugo Development Create a Dockerfile.</description></item><item><title>Hugo Migration Implementation Steps</title><link>https://example.github.io/mcp-scope/hugo-implementation-steps-update/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.github.io/mcp-scope/hugo-implementation-steps-update/</guid><description>Hugo Migration Implementation Steps üü¢ Active
‚Ü©Ô∏è Back to Hugo Migration Executive Summary
Overview This document provides a detailed, step-by-step guide for implementing the ScopeCam MCP documentation migration to Hugo. The implementation process is designed to integrate seamlessly with the project&amp;rsquo;s existing containerized development environment and automation frameworks.
Prerequisites Access to the ScopeCam MCP repository Familiarity with the Containerized Development Environment Docker or Podman installed locally Basic understanding of Hugo Git and GitHub access Phase 1: Foundation Setup 1.</description></item></channel></rss>