<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Content on ScopeCam MCP Documentation</title><link>https://example.github.io/mcp-scope/tags/content/</link><description>Recent content in Content on ScopeCam MCP Documentation</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://example.github.io/mcp-scope/tags/content/index.xml" rel="self" type="application/rss+xml"/><item><title>Content Inventory and Migration Prioritization</title><link>https://example.github.io/mcp-scope/content-inventory-and-prioritization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.github.io/mcp-scope/content-inventory-and-prioritization/</guid><description>Content Inventory and Migration Prioritization ðŸŸ¢ Active
Overview This document provides a complete inventory of all existing documentation to be migrated to the Hugo static site framework, along with a prioritized migration order. This structured approach ensures systematic migration of content while maintaining documentation availability throughout the process.
Complete Content Inventory The following tables list all documentation files in the current structure, organized by layer and section.
Root Documentation Layer Project Documentation Current Path Hugo Path Status Priority /docs/README.</description></item><item><title>Hugo Migration Content Checklist</title><link>https://example.github.io/mcp-scope/hugo-migration-checklist/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.github.io/mcp-scope/hugo-migration-checklist/</guid><description>Hugo Migration Content Checklist ðŸŸ¢ Active
Overview This checklist provides a step-by-step guide for migrating existing documentation to the Hugo static site framework. It ensures consistent application of standards and proper conversion of content during the migration process.
Pre-Migration Preparation Document Inventory Review the Hugo Migration File Mapping document Identify all documents to be migrated in the current documentation Verify the mapping for each document to its new location in the Hugo structure Create a prioritized list of documents to migrate Document any dependencies between documents (cross-references) Environment Setup Ensure the Hugo environment is properly set up according to Hugo Implementation Steps Verify that the containerized environment is working as expected Test the Hugo server with existing sample content Ensure you have appropriate editor with Markdown preview capability Content Migration Process Step 1: Section Structure Setup Create section index files (_index.</description></item></channel></rss>