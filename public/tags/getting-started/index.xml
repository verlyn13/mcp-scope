<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting-Started on ScopeCam MCP Documentation</title><link>https://example.github.io/mcp-scope/tags/getting-started/</link><description>Recent content in Getting-Started on ScopeCam MCP Documentation</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://example.github.io/mcp-scope/tags/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started with MCP</title><link>https://example.github.io/mcp-scope/mcp/mcp/first-steps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.github.io/mcp-scope/mcp/mcp/first-steps/</guid><description>Getting Started with MCP üü¢ Active
‚Ü©Ô∏è Back to Documentation Index
Overview Welcome to the Multi-Agent Control Platform (MCP) project! This guide will help you set up your development environment and understand the project structure so you can start contributing quickly.
Prerequisites JDK 17 or later for Kotlin components Python 3.11 or later for Python agents Gradle 8.0+ for building JVM components (or use the wrapper) NATS Server for local message transport Podman or Docker (optional, for containerized development) What is MCP?</description></item><item><title>MCP Documentation Entry Point</title><link>https://example.github.io/mcp-scope/start_here/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.github.io/mcp-scope/start_here/</guid><description>START HERE: Multi-Agent Control Platform Documentation Welcome to the MCP Documentation System This document is the mandatory first stop for all team members working on the Multi-Agent Control Platform. It will direct you to the information you need based on your role and the current project focus.
Current Project Focus üîç CURRENT FOCUS: Phase 1 Implementation - Core Infrastructure
We are currently focused on implementing the core infrastructure components of the MCP platform, including the FSM framework, agent interfaces, NATS messaging integration, and basic health monitoring.</description></item></channel></rss>