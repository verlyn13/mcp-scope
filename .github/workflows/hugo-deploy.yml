name: Deploy Hugo site to GitHub Pages

on:
  # Runs on pushes to the main branch
  push:
    branches:
      - main  # Set to your default branch if different (e.g., master)
  
  # Allows manual triggering from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.111.3  # Set to a specific Hugo version for consistency
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb
          sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Debug information
        run: |
          echo "Theme directory exists: $(ls -la themes)"
          echo "Theme content: $(ls -la themes/mcp-theme)"
          echo "Current directory: $(pwd)"
          echo "Content directory: $(ls -la content)"
      
      - name: Build with Hugo
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/" \
            --debug
        
      - name: Create .nojekyll file
        run: touch public/.nojekyll
      
      - name: Verify build output
        run: |
          echo "Public directory exists: $(ls -la public)"
          echo "Sample content files: $(ls -la public | head -10)"
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4